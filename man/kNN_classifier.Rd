% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/kNN.R
\name{kNN_classifier}
\alias{kNN_classifier}
\title{kNN classifier}
\usage{
kNN_classifier(data, trueClasses, neighbors, memory = NULL, k = 1,
  type = "train")
}
\arguments{
\item{data}{A data frame or a matrix where rows are observations and
columns are features. If \code{type} is "train" this is training
dataset, and if it is "predict" it is test dataset.}

\item{trueClasses}{A vector with labels for each row in \code{data}
if \code{type} is "train", and with labels for each row in
\code{memory} if \code{type} is "predict".}

\item{neighbors}{A data frame containing for each data point of \code{data},
the ordered list of nearests neighbors (each column is a vector of indexes
pointing to nearest neighbors).}

\item{memory}{A data frame or a matrix where rows are observations
and columns are features. If \code{type} is "train" this argument
is not needed, and if it is "predict" it is a training dataset.}

\item{k}{Number of neighbors that the classifier should use. It has
to be an odd number.}

\item{type}{Whether the goal is to train the classifier or predict
classes of new observations based on past ones. The value can be
either "train" or "predict".}
}
\value{
A list with following elements: predictedClasses, prob,
accuracy and errorCount.
}
\description{
Classify the input with a k nearest neighbors classifier.
}
\examples{
# create artificial dataset
inputsTest   <- matrix(rnorm(200), ncol=2)
inputsTrain  <- matrix(rnorm(200), ncol=2)
classesTrain <- c(rep(0, 50), rep(1, 50))
# compute distances and neighbors
distMatrix<-distance(inputsTest, memory=inputsTrain,p=2,type="predict")
neighbors<-calculate_neighbors(distMatrix)
# get the kNN predictions for the test set
out<-kNN_classifier(inputsTest, classesTrain, neighbors, inputsTrain,
k=15, type="predict")
out$predictedClasses
}

